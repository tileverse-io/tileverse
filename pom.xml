<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.tileverse.rangereader</groupId>
  <artifactId>tileverse-rangereader-parent</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <name>Tileverse Range Reader</name>
  <description>A Java 17 library for reading content from multiple sources using range readers</description>
  <url>https://tileverse.io</url>

  <modules>
    <module>dependencies</module>
    <module>bom</module>
    <module>src</module>
    <module>benchmarks</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/tileverse-io/tileverse-rangereader.git</connection>
    <developerConnection>scm:git:https://github.com/tileverse-io/tileverse-rangereader.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/tileverse-io/tileverse-rangereader</url>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/tileverse-io/tileverse-rangereader/issues</url>
  </issueManagement>

  <properties>
    <!-- CI-friendly version management -->
    <revision>1.0-SNAPSHOT</revision>

    <!-- Build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>

    <!-- Default formatter/linter properties, see the qa profile -->
    <fmt.skip>false</fmt.skip>
    <sortpom.skip>${fmt.skip}</sortpom.skip>
    <sortpom.action>sort</sortpom.action>
    <spotless.skip>${fmt.skip}</spotless.skip>
    <spotless.action>apply</spotless.action>

    <!-- Dependency versions -->
    <!-- Runtime dependencies are defined in the dependencies/pom.xml BOM -->
    <lombok.version>1.18.38</lombok.version>

    <!-- Test Dependency versions -->
    <assertj.version>3.27.3</assertj.version>
    <awaitility.version>4.3.0</awaitility.version>
    <commons-io.version>2.19.0</commons-io.version>
    <junit.version>5.13.2</junit.version>
    <logback.version>1.5.18</logback.version>
    <mockito.version>5.18.0</mockito.version>
    <testcontainers.version>1.21.2</testcontainers.version>
    <wiremock.version>3.13.1</wiremock.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
        <optional>true</optional>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>1.37</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>1.37</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.14.0</version>
          <inherited>true</inherited>
          <configuration>
            <release>${maven.compiler.release}</release>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.5.0</version>
          <inherited>true</inherited>
          <executions>
            <execution>
              <id>enforce-rules</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>[${maven.compiler.release}},)</version>
                    <message>Java ${maven.compiler.release} or newer is required to build this project</message>
                  </requireJavaVersion>
                  <dependencyConvergence>
                    <excludedScopes>test</excludedScopes>
                  </dependencyConvergence>
                  <requireMavenVersion>
                    <version>[3.9.0,)</version>
                    <message>Maven 3.9.0 or newer is required</message>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.5.3</version>
          <inherited>true</inherited>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
          <inherited>true</inherited>
          <configuration>
            <!-- Default configuration for all JAR files -->
            <excludes>
              <exclude>**/logback-test.xml</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <configuration>
                <!-- Specific configuration for test JARs -->
                <excludes>
                  <exclude>**/logback-test.xml</exclude>
                  <exclude>logback-test.xml</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.11.2</version>
        </plugin>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.6.1</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.44.5</version>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>4.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code formatting with Spotless -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <skip>${spotless.skip}</skip>
          <java>
            <palantirJavaFormat>
              <version>2.61.0</version>
            </palantirJavaFormat>
            <licenseHeader>
              <file>${maven.multiModuleProjectDirectory}/license_header.txt</file>
            </licenseHeader>
          </java>
          <upToDateChecking>
            <enabled>true</enabled>
            <indexFile>${project.basedir}/.spotless-index</indexFile>
          </upToDateChecking>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${spotless.action}</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- POM file organization with SortPOM -->
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <encoding>UTF-8</encoding>
          <keepBlankLines>true</keepBlankLines>
          <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
          <createBackupFile>false</createBackupFile>
          <lineSeparator>\n</lineSeparator>
          <verifyFail>stop</verifyFail>
          <verifyFailOn>strict</verifyFailOn>
          <skip>${sortpom.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${sortpom.action}</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Flatten POM for CI-friendly versioning -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>qa</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <properties>
        <spotless.action>check</spotless.action>
        <sortpom.action>verify</sortpom.action>
        <sortpom.verifyFailOn>strict</sortpom.verifyFailOn>
        <sortpom.verifyFail>stop</sortpom.verifyFail>
      </properties>
    </profile>

    <!-- Skip formatting plugins in Eclipse to avoid IDE integration issues -->
    <profile>
      <id>eclipse-integration</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <properties>
        <spotless.skip>true</spotless.skip>
        <sortpom.skip>true</sortpom.skip>
      </properties>
    </profile>
  </profiles>
</project>
