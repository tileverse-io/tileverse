name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

# cancel in-progress jobs or runs for this workflow for the same pr or branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Improve performance with parallel builds
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=2

jobs:
  lint:
    name: Code Quality & Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Check code formatting and license headers
      run: make lint

  build:
    name: Build & Unit Tests (Java ${{ matrix.java-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"
    strategy:
      matrix:
        # Test Java 17 (minimum version) on all operating systems
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: ['17']
        include:
          # Test all LTS versions on Linux only
          - os: ubuntu-latest
            java-version: '21'
          - os: ubuntu-latest
            java-version: '25'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Compile code (Unix)
      if: runner.os != 'Windows'
      run: make install

    - name: Compile code (Windows)
      if: runner.os == 'Windows'
      run: ./mvnw.cmd install -DskipTests -ntp -T1C "-Dfmt.skip=true"

    - name: Run unit tests (Unix)
      if: runner.os != 'Windows'
      run: make test-unit

    - name: Run unit tests (Windows)
      if: runner.os == 'Windows'
      run: ./mvnw.cmd test -ntp -T1C -pl "!tileverse-rangereader/benchmarks" "-Dfmt.skip=true"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/site/jacoco/

    - name: Remove SNAPSHOT jars from repository
      if: runner.os != 'Windows'
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

    - name: Remove SNAPSHOT jars from repository (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Get-ChildItem -Path ~/.m2/repository -Recurse -Filter "*SNAPSHOT*" -Directory | Remove-Item -Recurse -Force

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [lint, build]
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"
    strategy:
      matrix:
        java-version: ['17', '21', '25']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
        
    - name: Run integration tests - (Java ${{ matrix.java-version }})
      # Enable coverage for Java 17 to generate complete aggregate report (unit + integration tests)
      run: |
        if [[ "${{ matrix.java-version }}" == "17" ]]; then
          ./mvnw verify -Dcoverage -ntp -T1C -Dfmt.skip
        else
          make test-it
        fi

    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results-java-${{ matrix.java-version }}
        path: |
          **/target/failsafe-reports/
          **/target/logs/

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: matrix.java-version == '17'
      with:
        name: coverage-report
        path: coverage-report/target/site/jacoco-aggregate/

    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

  # Summary job that depends on all others
  pr-validation-complete:
    name: PR Validation Complete
    runs-on: ubuntu-latest
    needs: [lint, build, integration-tests]
    # Always run this job to ensure workflow concludes with success/failure
    if: always()

    steps:
    - name: Check all jobs status
      run: |
        echo "Lint: ${{ needs.lint.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Integration Tests: ${{ needs.integration-tests.result }}"

        # If jobs were skipped (merged PR), treat as success
        if [[ "${{ needs.lint.result }}" == "skipped" &&
              "${{ needs.build.result }}" == "skipped" &&
              "${{ needs.integration-tests.result }}" == "skipped" ]]; then
          echo "✅ Jobs skipped (merged PR) - treating as success"
          exit 0
        fi

        # Otherwise, all jobs must succeed
        if [[ "${{ needs.lint.result }}" != "success" ||
              "${{ needs.build.result }}" != "success" ||
              "${{ needs.integration-tests.result }}" != "success" ]]; then
          echo "❌ PR validation failed"
          exit 1
        else
          echo "✅ PR validation successful"
        fi

