<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.tileverse</groupId>
    <artifactId>tileverse-parent</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>tileverse-dependencies</artifactId>
  <packaging>pom</packaging>
  <name>Tileverse Dependencies BOM</name>
  <description>Manages versions of third-party libraries used by Tileverse</description>

  <properties>
    <!-- Dependency versions -->
    <jts.version>1.20.0</jts.version>
    <protobuf-java.version>4.31.1</protobuf-java.version>
    <commons-compress.version>1.28.0</commons-compress.version>
    <zstd-jni.version>1.5.7-4</zstd-jni.version>
    <caffeine.version>3.2.2</caffeine.version>
    <commons-codec.version>1.19.0</commons-codec.version>
    <jackson.version>2.19.2</jackson.version>
    <slf4j-api.version>2.0.17</slf4j-api.version>
    <aws-s3.version>2.32.25</aws-s3.version>
    <azure-identity.version>1.16.3</azure-identity.version>
    <azure-storage-blob.version>12.31.1</azure-storage-blob.version>
    <google-cloud-storage.version>2.55.0</google-cloud-storage.version>
    <httpclient.version>4.5.14</httpclient.version>
    <msal4j.version>1.22.0</msal4j.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- overriding versions for dependency convergence -->
      <dependency>
        <!--
         Dependency convergence error for com.google.errorprone:error_prone_annotations:jar:2.40.0 paths to dependency are:
         +-io.tileverse.rangereader:tileverse-rangereader-gcs:jar:1.0-SNAPSHOT
           +-io.tileverse.rangereader:tileverse-rangereader-core:jar:1.0-SNAPSHOT:compile
             +-com.github.ben-manes.caffeine:caffeine:jar:3.2.2:compile
               +-com.google.errorprone:error_prone_annotations:jar:2.40.0:compile
         and
         +-io.tileverse.rangereader:tileverse-rangereader-gcs:jar:1.0-SNAPSHOT
           +-com.google.cloud:google-cloud-storage:jar:2.53.1:compile
             +-com.google.errorprone:error_prone_annotations:jar:2.38.0:compile        
        -->
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.40.0</version>
      </dependency>
      <dependency>
        <!--
        dependency convergence between transitive dependencies of
        com.azure:azure-storage-blob:jar:12.30.0:compile
         +-com.azure:azure-core:jar:1.55.3:compile
           +-com.fasterxml.jackson.core:jackson-databind:jar:2.17.2:compile
             +-com.fasterxml.jackson.core:jackson-core:jar:2.17.2:compile
        and
        com.google.cloud:google-cloud-storage:jar:2.53.1:compile
         +-com.fasterxml.jackson.core:jackson-core:jar:2.18.2:compile
        -->
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <!--
        dependency convergence between transitive dependencies of
        +-io.tileverse.rangereader:tileverse-rangereader-s3:jar:1.0-SNAPSHOT
          +-software.amazon.awssdk:s3:jar:2.31.70:compile
            +-software.amazon.awssdk:apache-client:jar:2.31.70:runtime
              +-org.apache.httpcomponents:httpclient:jar:4.5.13:runtime
                +-org.apache.httpcomponents:httpcore:jar:4.4.13:runtime
        and
        +-io.tileverse.rangereader:tileverse-rangereader-s3:jar:1.0-SNAPSHOT
          +-software.amazon.awssdk:s3:jar:2.31.70:compile
            +-software.amazon.awssdk:apache-client:jar:2.31.70:runtime
              +-org.apache.httpcomponents:httpcore:jar:4.4.16:runtime
        -->
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <!--
        dependency convergence between transitive dependencies of
         +-io.tileverse.rangereader:tileverse-rangereader-s3:jar:1.0-SNAPSHOT
           +-software.amazon.awssdk:s3:jar:2.31.70:compile
             +-software.amazon.awssdk:apache-client:jar:2.31.70:runtime
               +-org.apache.httpcomponents:httpclient:jar:4.5.14:runtime
                +-commons-codec:commons-codec:jar:1.11:runtime
         and
         +-io.tileverse.rangereader:tileverse-rangereader-s3:jar:1.0-SNAPSHOT
           +-software.amazon.awssdk:s3:jar:2.31.70:compile
             +-software.amazon.awssdk:apache-client:jar:2.31.70:runtime
               +-commons-codec:commons-codec:jar:1.17.1:runtime
        -->
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <!-- Caching -->
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>

      <!-- JTS Topology Suite -->
      <dependency>
        <groupId>org.locationtech.jts</groupId>
        <artifactId>jts-core</artifactId>
        <version>${jts.version}</version>
      </dependency>

      <!-- Protocol Buffers -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-javalite</artifactId>
        <version>${protobuf-java.version}</version>
      </dependency>

      <!-- Compression -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <!-- fulfill the optional dependency from commons-compress:1.28.0 -->
        <!-- keep it up to date when upgrading commons-compress -->
        <groupId>com.github.luben</groupId>
        <artifactId>zstd-jni</artifactId>
        <version>${zstd-jni.version}</version>
      </dependency>

      <!-- Google Cloud Storage -->
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>google-cloud-storage-bom</artifactId>
        <version>${google-cloud-storage.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Azure -->
      <dependency>
        <groupId>com.azure</groupId>
        <artifactId>azure-storage-blob</artifactId>
        <version>${azure-storage-blob.version}</version>
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!-- exclude netty, we don't want all the transitive dependencies, will use azure-core-http-jdk-httpclient instead-->
            <groupId>com.azure</groupId>
            <artifactId>azure-core-http-netty</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- JDK HttpClient -->
        <!-- see https://learn.microsoft.com/en-us/azure/developer/java/sdk/http-client-pipeline -->
        <!--
            Ensure dependency convergence on com.azure:azure-core by checking
            https://mvnrepository.com/artifact/com.azure/azure-core-http-jdk-httpclient
        -->
        <groupId>com.azure</groupId>
        <artifactId>azure-core-http-jdk-httpclient</artifactId>
        <version>1.0.5</version>
      </dependency>
      <dependency>
        <groupId>com.azure</groupId>
        <artifactId>azure-identity</artifactId>
        <version>${azure-identity.version}</version>
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!-- exclude netty, we don't want all the transitive dependencies, will use azure-core-http-jdk-httpclient instead-->
            <groupId>com.azure</groupId>
            <artifactId>azure-core-http-netty</artifactId>
          </exclusion>
          <exclusion>
            <!-- let azure-core version be managed by azure-storage-blob -> azure-core -->
            <groupId>com.azure</groupId>
            <artifactId>azure-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>msal4j</artifactId>
        <version>${msal4j.version}</version>
        <exclusions>
          <exclusion>
            <!-- let azure-json version be managed by azure-storage-blob -> azure-core -> azure-json -->
            <groupId>com.azure</groupId>
            <artifactId>azure-json</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- AWS -->
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>s3</artifactId>
        <version>${aws-s3.version}</version>
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!--
                exclude netty, we don't want all the transitive dependencies, it'll use
                software.amazon.awssdk:apache-client -> org.apache.httpcomponents:httpclient instead
            -->
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>apache-client</artifactId>
        <version>${aws-s3.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>auth</artifactId>
        <version>${aws-s3.version}</version>
        <optional>true</optional>
      </dependency>
      <!-- S3 specific authentication methods -->
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>sts</artifactId>
        <version>${aws-s3.version}</version>
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!--
                exclude netty, we don't want all the transitive dependencies, it'll use
                software.amazon.awssdk:apache-client -> org.apache.httpcomponents:httpclient instead
            -->
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
          </exclusion>
          <exclusion>
            <!-- let the version be managed by software.amazon.awssdk:s3 -->
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>sso</artifactId>
        <version>${aws-s3.version}</version>
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!--
                exclude netty, we don't want all the transitive dependencies, it'll use
                software.amazon.awssdk:apache-client -> org.apache.httpcomponents:httpclient instead
            -->
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
          </exclusion>
          <exclusion>
            <!-- let the version be managed by software.amazon.awssdk:s3 -->
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
      <plugin>
        <!--
        flatten plugin configured to install a BOM pom, though not using flattenMode=bom because it doesn't resolve
        version properties and adds properties defined in the root pom.
        See https://www.mojohaus.org/flatten-maven-plugin/flatten-mojo.html#flattenMode
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>ossrh</flattenMode>
          <pomElements>
            <!--
            Take the element from the interpolated POM (original POM with variables interpolated).
            This avoids adding dependencies defined in the root pom (e.g. junit) 
            -->
            <dependencyManagement>interpolate</dependencyManagement>
          </pomElements>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
