name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '**.md'

# cancel in-progress jobs or runs for this workflow for the same pr or branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Improve performance with parallel builds
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=2

jobs:
  lint:
    name: Code Quality & Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Check code formatting and license headers
      run: make lint

  build:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"
    strategy:
      matrix:
        java-version: ['17', '21', '25']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
        
    - name: Compile code
      run: make install
      
    - name: Run unit tests
      run: make test-unit
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/site/jacoco/

    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [lint, build]
    # Skip if this is a merged PR (tests already ran during PR validation)
    if: "github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #')"
    strategy:
      matrix:
        java-version: ['17', '21', '25']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
        
    - name: Run integration tests - (Java ${{ matrix.java-version }})
      run: make test-it

    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results-java-${{ matrix.java-version }}
        path: |
          **/target/failsafe-reports/
          **/target/logs/

    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

  # Summary job that depends on all others
  pr-validation-complete:
    name: PR Validation Complete
    runs-on: ubuntu-latest
    needs: [lint, build, integration-tests]
    # Only run if the other jobs ran (skip if merged PR)
    if: "always() && (github.event_name == 'pull_request' || !contains(github.event.head_commit.message, 'Merge pull request #'))"

    steps:
    - name: Check all jobs status
      run: |
        echo "Lint: ${{ needs.lint.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Integration Tests: ${{ needs.integration-tests.result }}"
        
        if [[ "${{ needs.lint.result }}" != "success" || 
              "${{ needs.build.result }}" != "success" || 
              "${{ needs.integration-tests.result }}" != "success" ]]; then
          echo "❌ PR validation failed"
          exit 1
        else
          echo "✅ PR validation successful"
        fi

