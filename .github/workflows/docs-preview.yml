name: Documentation Preview

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/docs-preview.yml'
  # Allow manual triggering for branch previews
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name for preview'
        required: false
        default: ''

# Set permissions for PR comments and artifact uploads
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event.inputs.branch_name != ''
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # For manual dispatch, checkout the specified branch
        ref: ${{ github.event.inputs.branch_name || github.head_ref }}
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Build documentation using local development script
      working-directory: docs
      run: ./build.sh
        
    - name: Configure and build documentation preview
      working-directory: docs
      run: |
        # Activate virtual environment created by build.sh
        source .venv/bin/activate
        
        # Create a temporary mkdocs config for preview
        cp mkdocs.yml mkdocs-preview.yml
        
        # Update site_url for preview environment
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          PREVIEW_URL="https://preview-pr-${{ github.event.number }}.github.io/tileverse-rangereader/"
        else
          BRANCH_NAME="${{ github.event.inputs.branch_name || github.ref_name }}"
          PREVIEW_URL="https://preview-${BRANCH_NAME}.github.io/tileverse-rangereader/"
        fi
        
        # Update the site_url in the preview config
        sed -i "s|site_url: .*|site_url: $PREVIEW_URL|g" mkdocs-preview.yml
        
        # Add a banner for preview builds by inserting into existing extra section
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BANNER_MESSAGE="📝 This is a preview build for PR #${{ github.event.number }}"
        else
          BANNER_MESSAGE="🌿 This is a preview build for branch: ${{ github.event.inputs.branch_name || github.ref_name }}"
        fi
        
        # Insert banner config after the 'extra:' line
        cat >> mkdocs-preview.yml << EOF
        
        # Preview banner configuration
        extra:
          banner:
            enabled: true
            message: "$BANNER_MESSAGE"
        EOF
        
        # Build with activated virtual environment
        mkdocs build --config-file mkdocs-preview.yml --strict
        
        # Add a robots.txt to prevent search engine indexing of previews
        echo "User-agent: *" > site/robots.txt
        echo "Disallow: /" >> site/robots.txt
        
        # Add preview metadata
        echo "<!-- Preview build -->" >> site/index.html
        echo "<!-- Generated: $(date) -->" >> site/index.html
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "<!-- PR: #${{ github.event.number }} -->" >> site/index.html
          echo "<!-- Commit: ${{ github.event.pull_request.head.sha }} -->" >> site/index.html
        else
          echo "<!-- Branch: ${{ github.event.inputs.branch_name || github.ref_name }} -->" >> site/index.html
          echo "<!-- Commit: ${{ github.sha }} -->" >> site/index.html
        fi
        
    - name: Upload preview artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation-preview-${{ github.event.number || github.event.inputs.branch_name || github.ref_name }}
        path: docs/site/
        retention-days: 14
        
    - name: Deploy to preview environment (Netlify/Surge)
      if: github.event_name == 'pull_request'
      run: |
        # This is a placeholder for deploying to a preview service
        # You could integrate with Netlify, Surge.sh, or GitHub Pages for previews
        echo "🚀 Preview deployment would happen here"
        echo "For a real implementation, you might:"
        echo "  - Deploy to Netlify with PR previews"
        echo "  - Use Surge.sh for quick previews"
        echo "  - Deploy to a subdomain/path on your server"
        echo "  - Use GitHub Pages with branch protection"
        
        # Example for Surge.sh (you'd need to configure secrets)
        # npm install -g surge
        # surge docs/site/ ${{ github.event.number }}-preview.surge.sh --token $SURGE_TOKEN
        
    - name: Comment on PR with preview link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const commitSha = context.payload.pull_request.head.sha.substring(0, 7);
          const artifactUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
          
          const comment = `
          ## 📖 Documentation Preview Ready!
          
          The documentation has been built for this PR and is ready for review.
          
          ### 🔗 Preview Options:
          
          1. **Download Artifact**: [documentation-preview-${prNumber}](${artifactUrl}) 
             - Download the built site and open \`index.html\` locally
          
          2. **Local Preview**: 
             \`\`\`bash
             cd docs
             mkdocs serve
             \`\`\`
          
          ### 📊 Build Information:
          - **Commit**: \`${commitSha}\`
          - **Build Time**: ${new Date().toISOString()}
          - **Status**: ✅ Build Successful
          
          ### 🧪 What's Included:
          - All documentation changes from this PR
          - Updated navigation and cross-references
          - Validated internal links
          - Optimized assets and styling
          
          ---
          
          💡 **Tip**: To test locally, run \`mkdocs serve\` in the \`docs/\` directory after merging this PR.
          `;
          
          // Check if we already commented on this PR
          const existingComments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const botComment = existingComments.data.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('📖 Documentation Preview Ready!')
          );
          
          try {
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not post/update comment on PR:', error.message);
            // Continue execution - commenting is not critical
          }

  # Compare documentation changes
  compare-changes:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}
        path: base
        
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        path: pr
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Build base documentation using local development script
      run: |
        if [ -d "base/docs" ] && [ -f "base/docs/build.sh" ]; then
          echo "Building base documentation..."
          cd base/docs
          ./build.sh
          mv site ../../base-site
        else
          echo "No docs directory in base branch, creating empty baseline"
          mkdir -p base-site
          echo "<html><body><h1>No documentation in base branch</h1></body></html>" > base-site/index.html
        fi
      
    - name: Build PR documentation using local development script
      working-directory: pr/docs
      run: |
        ./build.sh
        mv site ../../pr-site
      
    - name: Compare documentation changes
      run: |
        echo "## 📊 Documentation Changes Summary" > /tmp/changes.md
        echo "" >> /tmp/changes.md
        
        # Compare file counts
        base_files=$(find base-site -name "*.html" | wc -l)
        pr_files=$(find pr-site -name "*.html" | wc -l)
        
        echo "- **Base branch pages**: $base_files" >> /tmp/changes.md
        echo "- **PR branch pages**: $pr_files" >> /tmp/changes.md
        echo "- **Net change**: $((pr_files - base_files)) pages" >> /tmp/changes.md
        echo "" >> /tmp/changes.md
        
        # Find new files
        echo "### 📄 New Pages:" >> /tmp/changes.md
        find pr-site -name "*.html" -type f | while read pr_file; do
          relative_path=${pr_file#pr-site/}
          base_file="base-site/$relative_path"
          if [ ! -f "$base_file" ]; then
            echo "- \`$relative_path\`" >> /tmp/changes.md
          fi
        done
        
        # Find removed files
        echo "" >> /tmp/changes.md
        echo "### 🗑️ Removed Pages:" >> /tmp/changes.md
        find base-site -name "*.html" -type f | while read base_file; do
          relative_path=${base_file#base-site/}
          pr_file="pr-site/$relative_path"
          if [ ! -f "$pr_file" ]; then
            echo "- \`$relative_path\`" >> /tmp/changes.md
          fi
        done
        
        # Find modified files (basic check by file size difference)
        echo "" >> /tmp/changes.md
        echo "### ✏️ Modified Pages:" >> /tmp/changes.md
        find pr-site -name "*.html" -type f | while read pr_file; do
          relative_path=${pr_file#pr-site/}
          base_file="base-site/$relative_path"
          if [ -f "$base_file" ]; then
            pr_size=$(stat -c%s "$pr_file" 2>/dev/null || stat -f%z "$pr_file")
            base_size=$(stat -c%s "$base_file" 2>/dev/null || stat -f%z "$base_file")
            size_diff=$((pr_size - base_size))
            if [ "$size_diff" -ne 0 ]; then
              if [ "$size_diff" -gt 0 ]; then
                echo "- \`$relative_path\` (+$size_diff bytes)" >> /tmp/changes.md
              else
                echo "- \`$relative_path\` ($size_diff bytes)" >> /tmp/changes.md
              fi
            fi
          fi
        done
        
        echo "" >> /tmp/changes.md
        echo "*Analysis generated on $(date)*" >> /tmp/changes.md
        
    - name: Upload comparison report
      uses: actions/upload-artifact@v4
      with:
        name: documentation-comparison-${{ github.event.number }}
        path: /tmp/changes.md
        retention-days: 7
        
    - name: Add comparison to PR comment
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const changes = fs.readFileSync('/tmp/changes.md', 'utf8');
          
          const comment = `
          ## 📈 Documentation Impact Analysis
          
          ${changes}
          
          ---
          
          *This analysis compares the built documentation between the base branch and this PR.*
          `;
          
          try {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
          } catch (error) {
            console.log('Could not post comparison comment on PR:', error.message);
            // Continue execution - commenting is not critical
          }